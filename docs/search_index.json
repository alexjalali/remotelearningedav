[["index.html", "Remote Learning Preferences Analysis Chapter 1 Introduction", " Remote Learning Preferences Analysis Alexandra Jalali, Liang Zhuang, Victoria Xu 2022-12-15 Chapter 1 Introduction please work "],["proposal.html", "Chapter 2 Proposal 2.1 Research topic 2.2 Data availability", " Chapter 2 Proposal 2.1 Research topic Our topic will be analyzing remote learning preferences for different public school districts in New York City. We will analyze race/ethnicity, grade level, poverty, gender, disability, and more variables per district and compare those to the percentage of students who prefer to work remote rather than hybrid. Doing this we hope to see patterns and relationships between remote learning preferences and other variables, and be able to draw conclusions. We will also analyze ELA (English Language Arts) test scores and math test scores for public school students by district, and take variables such as ethnicity, gender, and poverty into account, to potentially find a correlation between student preferences and test result outcomes. Remote learning is a fairly new concept popularized by the COVID-19 pandemic. As students of Columbia University who attended part of our undergraduate education remote, we are interested in remote learning preferences for K-12 students, what factors impact it, and how remote learning changes student outcomes. Our conclusions could assist educational institutions in making decisions for online learning. It is important to make sure there is fairness for all students of all economic backgrounds in receiving an education. 2.2 Data availability 2.2.1 Data Set 1: Learning Preference City Remote Learning (as of Jan 4, 2021) The first dataset we will be using is Learning Preference City Remote Learning from the NYC Department of Education. It consists of total enrollment count for students who prefer remote or hybrid learning, and who have attended school in person at least once since September 2020. The samples are collected from NYC public schools grades K-12 for each district. The dataset is as of January 4, 2021 and made public on March 11, 2021. This dataset is formatted with 8 columns and 876 rows of observations. The columns consist of district number, disaggregation category, category, number of total enrollment, number blended, percent blended, number remote, and percent remote. District number is our key/common variable used to combine other datasets that give metrics regarding specific district numbers for the same time period. Disaggregation category is a sub variable of different categories, such as gender or grade level. Category contains the specific group of that variable. For example, if disaggregation category is gender then the category groups are female and male for that specific district. These demographics will be used for visualizations and finding patterns. Blended refers to preference towards hybrid learning, and remote refers to preference towards remote learning. This dataset is updated on an as needed basis. It is imported directly through the NYC Open Data website as an excel file, which is a government project providing open source data produced and used by City government, and the excel file can be imported directly to R. Students attending charter schools, receiving home or hospital instruction, pre-K students, and attending certain specific programs are not included. In order to comply with regulations of the Family Educational Rights and Privacy Act on public reporting of education outcomes, data of groups with less than 5 students enrolled are suppressed with an “s”. Source URL: https://data.cityofnewyork.us/Education/Learning-Preference-City-Remote-Learning-as-of-Jan/k5d2-tkrr 2.2.2 Data Sets 2 &amp; 3: ELA (English Language Arts) and Math Test results (as of 2022) The second and third datasets we will be using are ELA and Math Test results for students from grade 3 to grade 8 for different districts. The datasets are collected from the NYC Department of Education, and are updated annually. Each dataset contains 6 different subsets. All sub-datasets split the students by districts since district is the main variable for us to combine all datasets for this project. For this project, we will use data values for year 2019 (before the pandemic) and 2022 (the first time after the pandemic when all students were required to take those exams) to study the effect of how students’ previous test outcomes influence their learning choices and also how their preferences influence their learning outcomes. We will also use data values for years 2018, 2019, and 2022 to study how the pandemic changed student learning outcomes. Specifically, for both ELA and Math Test results, the sub datasets are: 1. All - this dataset contains information of the test results of all students. This dataset has 1792 rows and 16 columns. 2. SWD - this dataset split student test results based on whether the students are SWD (students with disabilities). This dataset has 3584 rows and 16 columns. 3. Ethnicity - this dataset split student test results based on student race and ethnicity (Asian, Black, Hispanic, White). This dataset has 7168 rows and 16 columns. 4. Gender - this dataset split student test results based on student gender (male, female). This dataset has 3584 rows and 16 columns. 5. Econ Status - this dataset split student test results based on whether the student is economically disadvantaged. This dataset has 3584 rows and 16 columns. 6. ELL - this dataset split the test results based on ELL (English Language Learner) status (current ELL, ever ELL, never ELL). This dataset has 4704 rows and 16 columns. Some Limitations of the datasets: 1. Compare to other datasets we will use for this project, some districts are missing (districts 75, 79, and 84). 2. The scale for ELA and Math exams changed in 2018. In addition, the tests for 2020 were canceled due to the pandemic, and the tests for 2021 were voluntary. Therefore, we will only use data for 2018, 2019, and 2022. 3. For the ethnicity dataset, other ethnicity groups such as multi-racial and native american are not included. 4. For the gender dataset, other genders such as cisgender, transgender, and non-binary are not included. The datasets can be downloaded from the infohub of NYC Department of Education as Excel files, and can be imported to R directly. Source URLs: ELA Test Scores: https://infohub.nyced.org/docs/default-source/default-document-library/district-ela-results-2013-2022-(public).xlsx Math Test Scores: https://infohub.nyced.org/docs/default-source/default-document-library/district-math-results-2013-2022-(public).xlsx 2.2.3 Data Set 4: Demographic Snapshot – Citywide, Borough, District, and School (as of 2022) The fourth dataset we will be using is Demographic Snapshot – Citywide, Borough, District, and School from the NYC Department of Education, which provides data on annual enrollment at the citywide, borough, district, and school levels. We will mainly focus on the district sub-dataset and use it as a key to merge all our datasets. The data was collected for students who were enrolled in a New York City Department of Education (DOE) school in grades K–12 during School Year (SY) 2017–18 to 2021-22. The district sub-dataset has 43 columns and 176 rows. Enrollment data are broken down by student characteristics including Gender (female, male), Race/Ethnicity((Asian, Black, Hispanic, Multi-Racial, Native American, White, Missing Race/Ethnicity Data), Disability Status, ELL(English Language Learner) status, Poverty, and Economic Need Index (allows the City to better identify students eligible for free lunch). The datasets can be downloaded from the infohub of NYC Department of Education as an Excel file and can be imported to R directly. Source URL: https://infohub.nyced.org/docs/default-source/default-document-library/demographic-snapshot-2017-18-to-2021-22.xlsx "],["data.html", "Chapter 3 Data 3.1 Sources 3.2 Cleaning / transformation 3.3 Missing value analysis", " Chapter 3 Data 3.1 Sources The first dataset we used is Learning Preference City Remote Learning from the NYC Department of Education. It consists of total enrollment count for students who prefer remote or hybrid learning, and who have attended school in person at least once since September 2020. The samples are collected from NYC public schools grades K-12 for each district. The dataset is as of January 4, 2021 and made public on March 11, 2021. This dataset is formatted with 8 columns and 876 rows of observations. The columns consist of district number, disaggregation category, category, number of total enrollment, number blended, percent blended, number remote, and percent remote. District number is our key/common variable used to combine other datasets that give metrics regarding specific district numbers for the same time period. Disaggregation category is a sub variable of different categories, such as gender or grade level. Category contains the specific group of that variable. For example, if disaggregation category is gender then the category groups are female and male for that specific district. These demographics will be used for visualizations and finding patterns. Blended refers to preference towards hybrid learning, and remote refers to preference towards remote learning. This dataset is updated on an as needed basis. It is imported directly through the NYC Open Data website as an excel file, which is a government project providing open source data produced and used by City government. Students attending charter schools, receiving home or hospital instruction, pre-K students, and attending certain specific programs are not included. In order to comply with regulations of the Family Educational Rights and Privacy Act on public reporting of education outcomes, data of groups with less than 5 students enrolled are suppressed with an “s”. The second and third datasets we used are ELA and Math Test results for students from grade 3 to grade 8 for different districts. The datasets are collected from the NYC Department of Education, and are updated annually. Each dataset contains 6 different subsets. All sub-datasets split the students by districts since district is the main variable for us to combine all datasets for this project. For this project, we will use data values for year 2019 (before the pandemic) and 2022 (the first time after the pandemic when all students were required to take those exams) to study the effect of how students’ previous test outcomes influence their learning choices and also how their preferences influence their learning outcomes. We will also use data values for years 2018, 2019, and 2022 to study how the pandemic changed student learning outcomes. Specifically, for both ELA and Math Test results, the sub datasets are: All - this dataset contains information of the test results of all students. This dataset has 1792 rows and 16 columns. SWD - this dataset split student test results based on whether the students are SWD (students with disabilities). This dataset has 3584 rows and 16 columns. Ethnicity - this dataset split student test results based on student race and ethnicity (Asian, Black, Hispanic, White). This dataset has 7168 rows and 16 columns. Gender - this dataset split student test results based on student gender (male, female). This dataset has 3584 rows and 16 columns. Econ Status - this dataset split student test results based on whether the student is economically disadvantaged. This dataset has 3584 rows and 16 columns. ELL - this dataset split the test results based on ELL (English Language Learner) status (current ELL, ever ELL, never ELL). This dataset has 4704 rows and 16 columns. Some Limitations of the datasets: Compare to other datasets we will use for this project, some districts are missing (districts 75, 79, and 84) The scale for ELA and Math exams changed in 2018. In addition, the tests for 2020 were canceled due to the pandemic, and the tests for 2021 were voluntary. Therefore, we will only use data for 2018 and 2022. For the ethnicity dataset, other ethnicity groups such as multi-racial and native american are not included. For the gender dataset, other genders such as cisgender, transgender, and non-binary are not included. The datasets can be downloaded from the infohub of NYC Department of Education as Excel files, and can be imported to R directly. In Section 2.2, we mentioned also including a dataset on demographic snapshots per district. However, we decided to omit that dataset because the demographics we decided to ultimately focus on were already in the remote learning and test scores data sets. The demographic snapshots dataset included economic needs index per district, which would be an interesting variable to compare to remote learning preferences. However, that analysis would be too in depth and deserves its own project. Some issues we discover in this data include the complexity of tidying up the dataset, and the missing values in the math and ELA scores data sets. We will disguss how we resolved these issues in the following sections. URLs: Data Set 1: Remote Learning Preferences https://data.cityofnewyork.us/Education/Learning-Preference-City-Remote-Learning-as-of-Jan/k5d2-tkrr Data Set 2: ELA Test Scores https://infohub.nyced.org/docs/default-source/default-document-library/district-ela-results-2013-2022-(public).xlsx Data Set 3: Math Test Scores https://infohub.nyced.org/docs/default-source/default-document-library/district-math-results-2013-2022-(public).xlsx 3.2 Cleaning / transformation Our data required a significant amount of preprocessing due to the structure of the datasets from the New York City website. Our goal is to join the learning preference, math test scores, and ELA test scores by district number and demographics. We had to split each sheet from the CSV file into separate dataframes and manipulate the Math scores and ELA scores datasets to match the district number and disaggregation categories in the learning preference dataset. This allowed us to perform a right join and add the test scores as new variables in the learning preference dataset. We also added rows that represented the aggregate means for each district. Furthermore, we created a separate variable to categorize the percent remote learning variable as “High” for high remote learning preference, “Middle” for medium remote learning preference, and “Low” for lower remote learning preference. The final comprehensive dataset is called “df”, and the dataset with just the district aggregates is called “df_total”. 3.2.1 Loading in Data To begin, we loaded the remote learning preference, Math scores, and ELA scores datasets into RStudio. Since the Math and ELA scores datasets were in the form of a CSV file with multiple sheets, we wrote a function called “read_excel_allsheets” to read them all into RStudio. We then saved each relevant sheet to a new dataframe. #libraries library(tidyverse) library(here) library(readxl) library(dplyr) library(zoo) library(ggplot2) library(remotes) library(redav) library(naniar) library(ggpubr) #reading in learning preferences dataset learning_pref &lt;- read_csv(here::here(&quot;datasets&quot;, &quot;Learning_Preferences.csv&quot;),show_col_types = FALSE) #Our other datasets have multiple sheets, so this is a function to read all of them in read_excel_allsheets &lt;- function(filename, tibble = FALSE) { sheets &lt;- readxl::excel_sheets(filename) x &lt;- lapply(sheets, function(X) readxl::read_excel(filename, sheet = X)) if(!tibble) x &lt;- lapply(x, as.data.frame) names(x) &lt;- sheets x } #reading district math results excel and creating dataframes for each relevant sheet math_scores &lt;- read_excel_allsheets(here::here(&quot;datasets&quot;,&quot;district-math-results-2013-2022-(public).xlsx&quot;)) math_scores_all &lt;- math_scores[[&quot;All&quot;]] math_scores_swd &lt;- math_scores[[&quot;SWD&quot;]] math_scores_ethnicity &lt;- math_scores[[&quot;Ethnicity&quot;]] math_scores_gender &lt;- math_scores[[&quot;Gender&quot;]] math_scores_econstatus &lt;- math_scores[[&quot;Econ Status&quot;]] math_scores_ell &lt;- math_scores[[&quot;ELL&quot;]] math_scores_2019 &lt;- read_excel_allsheets(here::here(&quot;datasets&quot;,&quot;district-math-results-2013-2022-(public).xlsx&quot;)) math_scores_all_2019 &lt;- math_scores[[&quot;All&quot;]] math_scores_swd_2019 &lt;- math_scores[[&quot;SWD&quot;]] math_scores_ethnicity_2019 &lt;- math_scores[[&quot;Ethnicity&quot;]] math_scores_gender_2019 &lt;- math_scores[[&quot;Gender&quot;]] math_scores_econstatus_2019 &lt;- math_scores[[&quot;Econ Status&quot;]] math_scores_ell_2019 &lt;- math_scores[[&quot;ELL&quot;]] #reading district ELA results excel and creating dataframes for each relevant sheet ela_scores &lt;- read_excel_allsheets(here::here(&quot;datasets&quot;,&quot;district-ela-results-2013-2022-(public).xlsx&quot;)) ela_scores_all &lt;- ela_scores[[&quot;All&quot;]] ela_scores_swd &lt;- ela_scores[[&quot;SWD&quot;]] ela_scores_ethnicity &lt;- ela_scores[[&quot;Ethnicity&quot;]] ela_scores_gender &lt;- ela_scores[[&quot;Gender&quot;]] ela_scores_econstatus &lt;- ela_scores[[&quot;Econ Status&quot;]] ela_scores_ell &lt;- ela_scores[[&quot;ELL&quot;]] ela_scores_2019 &lt;- read_excel_allsheets(here::here(&quot;datasets&quot;,&quot;district-ela-results-2013-2022-(public).xlsx&quot;)) ela_scores_all_2019 &lt;- ela_scores[[&quot;All&quot;]] ela_scores_swd_2019 &lt;- ela_scores[[&quot;SWD&quot;]] ela_scores_ethnicity_2019 &lt;- ela_scores[[&quot;Ethnicity&quot;]] ela_scores_gender_2019 &lt;- ela_scores[[&quot;Gender&quot;]] ela_scores_econstatus_2019 &lt;- ela_scores[[&quot;Econ Status&quot;]] ela_scores_ell_2019 &lt;- ela_scores[[&quot;ELL&quot;]] #reading demographic snapshot excel and creating a dataframe for just the district sheet demo &lt;- read_excel_allsheets(here::here(&quot;datasets&quot;,&quot;demographic-snapshot.xlsx&quot;))[[&quot;District&quot;]] 3.2.2 Cleaning Data to Prepare for Merge 3.2.2.1 Cleaning Learning Preference Dataset To clean the learning preference dataset and prepare it for the merge, we retained only the 32 school districts that had test scores in the other datasets. For the same reason, in the grades category, we removed PK, 0K, grades 1-2, and grades 9-12 to maintain consistency with the other datasets. We also renamed the variables to facilitate the merging process. #keeping only the 32 school districts in learning_pref and dropping grades 1-2,9-12,PK and 0K to be consistent with other datasets learning_pref &lt;- learning_pref %&gt;% subset(District&lt;33) %&gt;% subset(!Category==&quot;1&quot;) %&gt;% subset(!Category==&quot;2&quot;) %&gt;% subset(!Category==&quot;9&quot;) %&gt;% subset(!Category==&quot;10&quot;) %&gt;% subset(!Category==&quot;11&quot;) %&gt;% subset(!Category==&quot;12&quot;) %&gt;% subset(!Category==&quot;PK&quot;)%&gt;% subset(!Category==&quot;0K&quot;) %&gt;% subset(!Category==&quot;All District&quot;) names(learning_pref)[names(learning_pref) == &quot;`Disaggregation Category`&quot;] = &quot;Disaggregation Category&quot; names(learning_pref)[names(learning_pref) == &quot;# Total Enrollment&quot;] = &quot;Total Enrollment&quot; names(learning_pref)[names(learning_pref) == &quot;# Remote&quot;] = &quot;Remote&quot; names(learning_pref)[names(learning_pref) == &quot;% Remote&quot;] = &quot;Percent Remote&quot; #renaming variable to make it easier to merge with other datasets 3.2.2.2 Cleaning the Test Scores Datasets For the Math and ELA test scores, we focused on scores from the years 2019 and 2022 to show the difference between pre-Covid and post-Covid test results. Each sheet from the CSV file that we divided corresponds to a specific disaggregation category that needed to be matched with the learning preference dataset. For each sheet, we selected the years 2019 and 2022, and renamed the specific category levels to match the learning preference dataset. #keeping only scores from 2022, and removing the &quot;all grade&quot; category math_scores_all_2022 &lt;- math_scores_all %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_ethnicity_2022 &lt;- math_scores_ethnicity %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_gender_2022 &lt;- math_scores_gender %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_econstatus_2022 &lt;- math_scores_econstatus %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_ell_2022 &lt;- math_scores_ell %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) %&gt;% mutate(Category = recode(Category, &quot;Current ELL&quot; = &quot;ELL&quot;, &quot;Ever ELL&quot; = &quot;ELL&quot;, &quot;Never ELL&quot; = &quot;Not ELL&quot;)) #renaming factor levels to match learning_pref dataset ela_scores_all_2022 &lt;- ela_scores_all %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_ethnicity_2022 &lt;- ela_scores_ethnicity %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_gender_2022 &lt;- ela_scores_gender %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_econstatus_2022 &lt;- ela_scores_econstatus %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_ell_2022 &lt;- ela_scores_ell %&gt;% subset(Year==&quot;2022&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) %&gt;% mutate(Category = recode(Category, &quot;Current ELL&quot; = &quot;ELL&quot;, &quot;Ever ELL&quot; = &quot;ELL&quot;, &quot;Never ELL&quot; = &quot;Not ELL&quot;)) #renaming factor levels to match learning_pref dataset #keeping only scores from 2019, and removing the &quot;all grade&quot; category math_scores_all_2019 &lt;- math_scores_all_2019 %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_ethnicity_2019 &lt;- math_scores_ethnicity %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_gender_2019 &lt;- math_scores_gender %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_econstatus_2019 &lt;- math_scores_econstatus %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) math_scores_ell_2019 &lt;- math_scores_ell %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) %&gt;% mutate(Category = recode(Category, &quot;Current ELL&quot; = &quot;ELL&quot;, &quot;Ever ELL&quot; = &quot;ELL&quot;, &quot;Never ELL&quot; = &quot;Not ELL&quot;)) #renaming factor levels to match learning_pref dataset ela_scores_all_2019 &lt;- ela_scores_all %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_ethnicity_2019 &lt;- ela_scores_ethnicity %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_gender_2019 &lt;- ela_scores_gender %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_econstatus_2019 &lt;- ela_scores_econstatus %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) ela_scores_ell_2019 &lt;- ela_scores_ell %&gt;% subset(Year==&quot;2019&quot;) %&gt;% subset(!Grade==&quot;All Grades&quot;) %&gt;% mutate(Category = recode(Category, &quot;Current ELL&quot; = &quot;ELL&quot;, &quot;Ever ELL&quot; = &quot;ELL&quot;, &quot;Never ELL&quot; = &quot;Not ELL&quot;)) #renaming factor levels to match learning_pref dataset 3.2.3 Merging Datasets 3.2.3.1 Creating Dataframe for District 1 We initiated the merging process by focusing on merging the learning preferences, Math scores, and ELA scores for District 1. We split the 2019 and 2022 Math and ELA scores by district, and then calculated the weighted mean of each score by category (for instance, for the disaggregation category “sex”, we calculated the weighted mean scores for males and females). We then merged all of those dataframes by district number, disaggregation category, and category. Finally, we merged that dataframe with the District 1 remote learning preferences dataset, and created a new row with the average scores and average learning preferences. This dataframe was called district_1. We then created a dataframe called “df_super” that will be used in the subsequent for loop. ##District 1## #Math scores #Mean math scores by ELL math_scores_ell_temp_2019 &lt;- split(math_scores_ell_2019, f = math_scores_ell_2019$District) math_scores_ell_temp_1_2019 &lt;- math_scores_ell_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ell_temp_1_2019$District &lt;- &quot;1&quot; math_scores_ell_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; math_scores_ell_temp_1_2019 &lt;- math_scores_ell_temp_1_2019[, c(3, 4, 1, 2)] #Mean math scores by gender math_scores_gender_temp_2019 &lt;- split(math_scores_gender_2019, f = math_scores_gender_2019$District) math_scores_gender_temp_1_2019 &lt;- math_scores_gender_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_gender_temp_1_2019$District &lt;- &quot;1&quot; math_scores_gender_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; math_scores_gender_temp_1_2019 &lt;- math_scores_gender_temp_1_2019[, c(3, 4, 1, 2)] #Mean math scores by grade level math_scores_all_temp_2019 &lt;- split(math_scores_all_2019, f = math_scores_all_2019$District) math_scores_all_temp_1_2019 &lt;- math_scores_all_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_all_temp_1_2019$District &lt;- &quot;1&quot; math_scores_all_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; math_scores_all_temp_1_2019 &lt;- math_scores_all_temp_1_2019[, c(3, 4, 1, 2)] names(math_scores_all_temp_1_2019)[names(math_scores_all_temp_1_2019) == &quot;Grade&quot;] = &quot;Category&quot; #Mean math scores by race/ethnicity math_scores_ethnicity_temp_2019 &lt;- split(math_scores_ethnicity_2019, f = math_scores_ethnicity_2019$District) math_scores_ethnicity_temp_1_2019 &lt;- math_scores_ethnicity_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ethnicity_temp_1_2019$District &lt;- &quot;1&quot; math_scores_ethnicity_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; math_scores_ethnicity_temp_1_2019 &lt;- math_scores_ethnicity_temp_1_2019[, c(3, 4, 1, 2)] #combining all math score datasets math_scores_temp_2019 &lt;- rbind(math_scores_ell_temp_1_2019,math_scores_gender_temp_1_2019,math_scores_all_temp_1_2019,math_scores_ethnicity_temp_1_2019) #ELA scores #Mean ela scores by ELL ela_scores_ell_temp_2019 &lt;- split(ela_scores_ell_2019, f = ela_scores_ell_2019$District) ela_scores_ell_temp_1_2019 &lt;- ela_scores_ell_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ell_temp_1_2019$District &lt;- &quot;1&quot; ela_scores_ell_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; ela_scores_ell_temp_1_2019 &lt;- ela_scores_ell_temp_1_2019[, c(3, 4, 1, 2)] #Mean ela scores by gender ela_scores_gender_temp_2019 &lt;- split(ela_scores_gender_2019, f = ela_scores_gender_2019$District) ela_scores_gender_temp_1_2019 &lt;- ela_scores_gender_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_gender_temp_1_2019$District &lt;- &quot;1&quot; ela_scores_gender_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; ela_scores_gender_temp_1_2019 &lt;- ela_scores_gender_temp_1_2019[, c(3, 4, 1, 2)] #Mean ela scores by grade level ela_scores_all_temp_2019 &lt;- split(ela_scores_all_2019, f = ela_scores_all_2019$District) ela_scores_all_temp_1_2019 &lt;- ela_scores_all_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_all_temp_1_2019$District &lt;- &quot;1&quot; ela_scores_all_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; ela_scores_all_temp_1_2019 &lt;- ela_scores_all_temp_1_2019[, c(3, 4, 1, 2)] names(ela_scores_all_temp_1_2019)[names(ela_scores_all_temp_1_2019) == &quot;Grade&quot;] = &quot;Category&quot; #Mean ela scores by race/ethnicity ela_scores_ethnicity_temp_2019 &lt;- split(ela_scores_ethnicity_2019, f = ela_scores_ethnicity_2019$District) ela_scores_ethnicity_temp_1_2019 &lt;- ela_scores_ethnicity_temp_2019[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ethnicity_temp_1_2019$District &lt;- &quot;1&quot; ela_scores_ethnicity_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; ela_scores_ethnicity_temp_1_2019 &lt;- ela_scores_ethnicity_temp_1_2019[, c(3, 4, 1, 2)] #combining all ela score datasets ela_scores_temp_2019 &lt;- rbind(ela_scores_ell_temp_1_2019,ela_scores_gender_temp_1_2019,ela_scores_all_temp_1_2019,ela_scores_ethnicity_temp_1_2019) #combining Math + ela score datasets district_1_scores_2019 &lt;- merge(math_scores_temp_2019,ela_scores_temp_2019,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) #Math scores #Mean math scores by ELL math_scores_ell_temp_2022 &lt;- split(math_scores_ell_2022, f = math_scores_ell_2022$District) math_scores_ell_temp_1_2022 &lt;- math_scores_ell_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ell_temp_1_2022$District &lt;- &quot;1&quot; math_scores_ell_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; math_scores_ell_temp_1_2022 &lt;- math_scores_ell_temp_1_2022[, c(3, 4, 1, 2)] #Mean math scores by gender math_scores_gender_temp_2022 &lt;- split(math_scores_gender_2022, f = math_scores_gender_2022$District) math_scores_gender_temp_1_2022 &lt;- math_scores_gender_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_gender_temp_1_2022$District &lt;- &quot;1&quot; math_scores_gender_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; math_scores_gender_temp_1_2022 &lt;- math_scores_gender_temp_1_2022[, c(3, 4, 1, 2)] #Mean math scores by grade level math_scores_all_temp_2022 &lt;- split(math_scores_all_2022, f = math_scores_all_2022$District) math_scores_all_temp_1_2022 &lt;- math_scores_all_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_all_temp_1_2022$District &lt;- &quot;1&quot; math_scores_all_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; math_scores_all_temp_1_2022 &lt;- math_scores_all_temp_1_2022[, c(3, 4, 1, 2)] names(math_scores_all_temp_1_2022)[names(math_scores_all_temp_1_2022) == &quot;Grade&quot;] = &quot;Category&quot; #Mean math scores by race/ethnicity math_scores_ethnicity_temp_2022 &lt;- split(math_scores_ethnicity_2022, f = math_scores_ethnicity_2022$District) math_scores_ethnicity_temp_1_2022 &lt;- math_scores_ethnicity_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ethnicity_temp_1_2022$District &lt;- &quot;1&quot; math_scores_ethnicity_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; math_scores_ethnicity_temp_1_2022 &lt;- math_scores_ethnicity_temp_1_2022[, c(3, 4, 1, 2)] #combining all math score datasets math_scores_temp_2022 &lt;- rbind(math_scores_ell_temp_1_2022,math_scores_gender_temp_1_2022,math_scores_all_temp_1_2022,math_scores_ethnicity_temp_1_2022) #ELA scores #Mean ela scores by ELL ela_scores_ell_temp_2022 &lt;- split(ela_scores_ell_2022, f = ela_scores_ell_2022$District) ela_scores_ell_temp_1_2022 &lt;- ela_scores_ell_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ell_temp_1_2022$District &lt;- &quot;1&quot; ela_scores_ell_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; ela_scores_ell_temp_1_2022 &lt;- ela_scores_ell_temp_1_2022[, c(3, 4, 1, 2)] #Mean ela scores by gender ela_scores_gender_temp_2022 &lt;- split(ela_scores_gender_2022, f = ela_scores_gender_2022$District) ela_scores_gender_temp_1_2022 &lt;- ela_scores_gender_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_gender_temp_1_2022$District &lt;- &quot;1&quot; ela_scores_gender_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; ela_scores_gender_temp_1_2022 &lt;- ela_scores_gender_temp_1_2022[, c(3, 4, 1, 2)] #Mean ela scores by grade level ela_scores_all_temp_2022 &lt;- split(ela_scores_all_2022, f = ela_scores_all_2022$District) ela_scores_all_temp_1_2022 &lt;- ela_scores_all_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_all_temp_1_2022$District &lt;- &quot;1&quot; ela_scores_all_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; ela_scores_all_temp_1_2022 &lt;- ela_scores_all_temp_1_2022[, c(3, 4, 1, 2)] names(ela_scores_all_temp_1_2022)[names(ela_scores_all_temp_1_2022) == &quot;Grade&quot;] = &quot;Category&quot; #Mean ela scores by race/ethnicity ela_scores_ethnicity_temp_2022 &lt;- split(ela_scores_ethnicity_2022, f = ela_scores_ethnicity_2022$District) ela_scores_ethnicity_temp_1_2022 &lt;- ela_scores_ethnicity_temp_2022[[&quot;1&quot;]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ethnicity_temp_1_2022$District &lt;- &quot;1&quot; ela_scores_ethnicity_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; ela_scores_ethnicity_temp_1_2022 &lt;- ela_scores_ethnicity_temp_1_2022[, c(3, 4, 1, 2)] #combining all ela score datasets ela_scores_temp_2022 &lt;- rbind(ela_scores_ell_temp_1_2022,ela_scores_gender_temp_1_2022,ela_scores_all_temp_1_2022,ela_scores_ethnicity_temp_1_2022) #combining Math + ela score datasets district_1_scores_2022 &lt;- merge(math_scores_temp_2022,ela_scores_temp_2022,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) #creating sub dataset of just district 1 for the main dataset (learning_pref) learning_pref_temp &lt;- split(learning_pref, f = learning_pref$District) learning_pref_temp_1 &lt;- learning_pref_temp[[&quot;1&quot;]] #combining district_1_scores with learning_pref_temp district_1 &lt;- merge(district_1_scores_2019,district_1_scores_2022,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) district_1 &lt;- merge(district_1, learning_pref_temp_1, by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) names(district_1)[names(district_1) == &quot;Mean Scale Score.x.x&quot;] = &quot;Math_Scores_2019&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.y.x&quot;] = &quot;ELA_Scores_2019&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.x.y&quot;] = &quot;Math_Scores_2022&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.y.y&quot;] = &quot;ELA_Scores_2022&quot; district_1$Remote &lt;- as.numeric(gsub(&quot;,&quot;,&quot;&quot;,district_1$Remote)) district_1$`Percent Remote` &lt;- as.numeric(gsub(&quot;%&quot;,&quot;&quot;,district_1$`Percent Remote`)) district_1$`# Blended` &lt;- as.numeric(gsub(&quot;,&quot;,&quot;&quot;,district_1$`# Blended`)) district_1$`% Blended` &lt;- as.numeric(gsub(&quot;%&quot;,&quot;&quot;,district_1$`% Blended`)) district_1[nrow(district_1) + 1,] &lt;- c(&quot;1&quot;,&quot;total&quot;, &quot;total&quot;, round(((district_1$Math_Scores_2019[1]*district_1$`Total Enrollment`[1])+(district_1$Math_Scores_2019[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$ELA_Scores_2019[1]*district_1$`Total Enrollment`[1])+(district_1$ELA_Scores_2019[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$Math_Scores_2022[1]*district_1$`Total Enrollment`[1])+(district_1$Math_Scores_2022[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$ELA_Scores_2022[1]*district_1$`Total Enrollment`[1])+(district_1$ELA_Scores_2022[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2], district_1$`# Blended`[1] + district_1$`# Blended`[2], 100*round((district_1$`# Blended`[1] + district_1$`# Blended`[2])/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), district_1$Remote[1] + district_1$Remote[2], 100*round((district_1$Remote[1] + district_1$Remote[2])/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4)) #renaming variables names(district_1)[names(district_1) == &quot;Math_Scores_2019&quot;] = &quot;MathScores2019&quot; names(district_1)[names(district_1) == &quot;ELA_Scores_2019&quot;] = &quot;ELAScores2019&quot; names(district_1)[names(district_1) == &quot;Math_Scores_2022&quot;] = &quot;MathScores2022&quot; names(district_1)[names(district_1) == &quot;ELA_Scores_2022&quot;] = &quot;ELAScores2022&quot; names(district_1)[names(district_1) == &quot;Disaggregation Category&quot;] = &quot;DisaggregationCategory&quot; names(district_1)[names(district_1) == &quot;Total Enrollment&quot;] = &quot;TotalEnrollment&quot; names(district_1)[names(district_1) == &quot;# Blended&quot;] = &quot;Blended&quot; names(district_1)[names(district_1) == &quot;% Blended&quot;] = &quot;PercentBlended&quot; names(district_1)[names(district_1) == &quot;Percent Remote&quot;] = &quot;PercentRemote&quot; df_super = district_1 3.2.3.2 For Loop to Iterate Merging for District 1 across the remaining Districts 2-32, and then adding those Dataframes to District 1 In order to avoid repeating that code 31 more times, we created a for loop to iterate those same steps for the remaining 2-32 districts. Once it loops through district 2, a dataframe district_2 is created and added under the district_1 dataframe that was saved into df_super. District_3 is then added under district_2, and this repeats until all 32 districts have been added to df_super. for (i in 2:32) { math_scores_ell_temp_2019 &lt;- split(math_scores_ell_2019, f = math_scores_ell_2019$District) math_scores_ell_temp_1_2019 &lt;- math_scores_ell_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ell_temp_1_2019$District &lt;- as.character(i) math_scores_ell_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; math_scores_ell_temp_1_2019 &lt;- math_scores_ell_temp_1_2019[, c(3, 4, 1, 2)] #Mean math scores by gender math_scores_gender_temp_2019 &lt;- split(math_scores_gender_2019, f = math_scores_gender_2019$District) math_scores_gender_temp_1_2019 &lt;- math_scores_gender_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_gender_temp_1_2019$District &lt;- as.character(i) math_scores_gender_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; math_scores_gender_temp_1_2019 &lt;- math_scores_gender_temp_1_2019[, c(3, 4, 1, 2)] #Mean math scores by grade level math_scores_all_temp_2019 &lt;- split(math_scores_all_2019, f = math_scores_all_2019$District) math_scores_all_temp_1_2019 &lt;- math_scores_all_temp_2019[[as.character(i)]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_all_temp_1_2019$District &lt;- as.character(i) math_scores_all_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; math_scores_all_temp_1_2019 &lt;- math_scores_all_temp_1_2019[, c(3, 4, 1, 2)] names(math_scores_all_temp_1_2019)[names(math_scores_all_temp_1_2019) == &quot;Grade&quot;] = &quot;Category&quot; #Mean math scores by race/ethnicity math_scores_ethnicity_temp_2019 &lt;- split(math_scores_ethnicity_2019, f = math_scores_ethnicity_2019$District) math_scores_ethnicity_temp_1_2019 &lt;- math_scores_ethnicity_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ethnicity_temp_1_2019$District &lt;- as.character(i) math_scores_ethnicity_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; math_scores_ethnicity_temp_1_2019 &lt;- math_scores_ethnicity_temp_1_2019[, c(3, 4, 1, 2)] #combining all math score datasets math_scores_temp_2019 &lt;- rbind(math_scores_ell_temp_1_2019,math_scores_gender_temp_1_2019,math_scores_all_temp_1_2019,math_scores_ethnicity_temp_1_2019) #ELA scores #Mean ela scores by ELL ela_scores_ell_temp_2019 &lt;- split(ela_scores_ell_2019, f = ela_scores_ell_2019$District) ela_scores_ell_temp_1_2019 &lt;- ela_scores_ell_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ell_temp_1_2019$District &lt;- as.character(i) ela_scores_ell_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; ela_scores_ell_temp_1_2019 &lt;- ela_scores_ell_temp_1_2019[, c(3, 4, 1, 2)] #Mean ela scores by gender ela_scores_gender_temp_2019 &lt;- split(ela_scores_gender_2019, f = ela_scores_gender_2019$District) ela_scores_gender_temp_1_2019 &lt;- ela_scores_gender_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_gender_temp_1_2019$District &lt;- as.character(i) ela_scores_gender_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; ela_scores_gender_temp_1_2019 &lt;- ela_scores_gender_temp_1_2019[, c(3, 4, 1, 2)] #Mean ela scores by grade level ela_scores_all_temp_2019 &lt;- split(ela_scores_all_2019, f = ela_scores_all_2019$District) ela_scores_all_temp_1_2019 &lt;- ela_scores_all_temp_2019[[as.character(i)]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_all_temp_1_2019$District &lt;- as.character(i) ela_scores_all_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; ela_scores_all_temp_1_2019 &lt;- ela_scores_all_temp_1_2019[, c(3, 4, 1, 2)] names(ela_scores_all_temp_1_2019)[names(ela_scores_all_temp_1_2019) == &quot;Grade&quot;] = &quot;Category&quot; #Mean ela scores by race/ethnicity ela_scores_ethnicity_temp_2019 &lt;- split(ela_scores_ethnicity_2019, f = ela_scores_ethnicity_2019$District) ela_scores_ethnicity_temp_1_2019 &lt;- ela_scores_ethnicity_temp_2019[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ethnicity_temp_1_2019$District &lt;- as.character(i) ela_scores_ethnicity_temp_1_2019$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; ela_scores_ethnicity_temp_1_2019 &lt;- ela_scores_ethnicity_temp_1_2019[, c(3, 4, 1, 2)] #combining all ela score datasets ela_scores_temp_2019 &lt;- rbind(ela_scores_ell_temp_1_2019,ela_scores_gender_temp_1_2019,ela_scores_all_temp_1_2019,ela_scores_ethnicity_temp_1_2019) #combining Math + ela score datasets district_1_scores_2019 &lt;- merge(math_scores_temp_2019,ela_scores_temp_2019,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) #Math scores #Mean math scores by ELL math_scores_ell_temp_2022 &lt;- split(math_scores_ell_2022, f = math_scores_ell_2022$District) math_scores_ell_temp_1_2022 &lt;- math_scores_ell_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ell_temp_1_2022$District &lt;- as.character(i) math_scores_ell_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; math_scores_ell_temp_1_2022 &lt;- math_scores_ell_temp_1_2022[, c(3, 4, 1, 2)] #Mean math scores by gender math_scores_gender_temp_2022 &lt;- split(math_scores_gender_2022, f = math_scores_gender_2022$District) math_scores_gender_temp_1_2022 &lt;- math_scores_gender_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_gender_temp_1_2022$District &lt;- as.character(i) math_scores_gender_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; math_scores_gender_temp_1_2022 &lt;- math_scores_gender_temp_1_2022[, c(3, 4, 1, 2)] #Mean math scores by grade level math_scores_all_temp_2022 &lt;- split(math_scores_all_2022, f = math_scores_all_2022$District) math_scores_all_temp_1_2022 &lt;- math_scores_all_temp_2022[[as.character(i)]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_all_temp_1_2022$District &lt;- as.character(i) math_scores_all_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; math_scores_all_temp_1_2022 &lt;- math_scores_all_temp_1_2022[, c(3, 4, 1, 2)] names(math_scores_all_temp_1_2022)[names(math_scores_all_temp_1_2022) == &quot;Grade&quot;] = &quot;Category&quot; #Mean math scores by race/ethnicity math_scores_ethnicity_temp_2022 &lt;- split(math_scores_ethnicity_2022, f = math_scores_ethnicity_2022$District) math_scores_ethnicity_temp_1_2022 &lt;- math_scores_ethnicity_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) math_scores_ethnicity_temp_1_2022$District &lt;- as.character(i) math_scores_ethnicity_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; math_scores_ethnicity_temp_1_2022 &lt;- math_scores_ethnicity_temp_1_2022[, c(3, 4, 1, 2)] #combining all math score datasets math_scores_temp_2022 &lt;- rbind(math_scores_ell_temp_1_2022,math_scores_gender_temp_1_2022,math_scores_all_temp_1_2022,math_scores_ethnicity_temp_1_2022) #ELA scores #Mean ela scores by ELL ela_scores_ell_temp_2022 &lt;- split(ela_scores_ell_2022, f = ela_scores_ell_2022$District) ela_scores_ell_temp_1_2022 &lt;- ela_scores_ell_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ell_temp_1_2022$District &lt;- as.character(i) ela_scores_ell_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;English Language Learner Status&quot; ela_scores_ell_temp_1_2022 &lt;- ela_scores_ell_temp_1_2022[, c(3, 4, 1, 2)] #Mean ela scores by gender ela_scores_gender_temp_2022 &lt;- split(ela_scores_gender_2022, f = ela_scores_gender_2022$District) ela_scores_gender_temp_1_2022 &lt;- ela_scores_gender_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_gender_temp_1_2022$District &lt;- as.character(i) ela_scores_gender_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Gender&quot; ela_scores_gender_temp_1_2022 &lt;- ela_scores_gender_temp_1_2022[, c(3, 4, 1, 2)] #Mean ela scores by grade level ela_scores_all_temp_2022 &lt;- split(ela_scores_all_2022, f = ela_scores_all_2022$District) ela_scores_all_temp_1_2022 &lt;- ela_scores_all_temp_2022[[as.character(i)]] %&gt;% group_by(Grade) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_all_temp_1_2022$District &lt;- as.character(i) ela_scores_all_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Grade Level&quot; ela_scores_all_temp_1_2022 &lt;- ela_scores_all_temp_1_2022[, c(3, 4, 1, 2)] names(ela_scores_all_temp_1_2022)[names(ela_scores_all_temp_1_2022) == &quot;Grade&quot;] = &quot;Category&quot; #Mean ela scores by race/ethnicity ela_scores_ethnicity_temp_2022 &lt;- split(ela_scores_ethnicity_2022, f = ela_scores_ethnicity_2022$District) ela_scores_ethnicity_temp_1_2022 &lt;- ela_scores_ethnicity_temp_2022[[as.character(i)]] %&gt;% group_by(Category) %&gt;% summarise(`Mean Scale Score`= weighted.mean(`Mean Scale Score`,`Number Tested`)) ela_scores_ethnicity_temp_1_2022$District &lt;- as.character(i) ela_scores_ethnicity_temp_1_2022$&quot;Disaggregation Category&quot; &lt;- &quot;Race or Ethnicity&quot; ela_scores_ethnicity_temp_1_2022 &lt;- ela_scores_ethnicity_temp_1_2022[, c(3, 4, 1, 2)] #combining all ela score datasets ela_scores_temp_2022 &lt;- rbind(ela_scores_ell_temp_1_2022,ela_scores_gender_temp_1_2022,ela_scores_all_temp_1_2022,ela_scores_ethnicity_temp_1_2022) #combining Math + ela score datasets district_1_scores_2022 &lt;- merge(math_scores_temp_2022,ela_scores_temp_2022,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) #creating sub dataset of just district 1 for the main dataset (learning_pref) learning_pref_temp &lt;- split(learning_pref, f = learning_pref$District) learning_pref_temp_1 &lt;- learning_pref_temp[[as.character(i)]] #combining district_1_scores with learning_pref_temp district_1 &lt;- merge(district_1_scores_2019,district_1_scores_2022,by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) district_1 &lt;- merge(district_1, learning_pref_temp_1, by=c(&quot;District&quot;,&quot;Disaggregation Category&quot;,&quot;Category&quot;)) names(district_1)[names(district_1) == &quot;Mean Scale Score.x.x&quot;] = &quot;Math_Scores_2019&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.y.x&quot;] = &quot;ELA_Scores_2019&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.x.y&quot;] = &quot;Math_Scores_2022&quot; names(district_1)[names(district_1) == &quot;Mean Scale Score.y.y&quot;] = &quot;ELA_Scores_2022&quot; district_1$Remote &lt;- as.numeric(gsub(&quot;,&quot;,&quot;&quot;,district_1$Remote)) district_1$`Percent Remote` &lt;- as.numeric(gsub(&quot;%&quot;,&quot;&quot;,district_1$`Percent Remote`)) district_1$`# Blended` &lt;- as.numeric(gsub(&quot;,&quot;,&quot;&quot;,district_1$`# Blended`)) district_1$`% Blended` &lt;- as.numeric(gsub(&quot;%&quot;,&quot;&quot;,district_1$`% Blended`)) district_1[nrow(district_1) + 1,] &lt;- c(as.character(i),&quot;total&quot;, &quot;total&quot;, round(((district_1$Math_Scores_2019[1]*district_1$`Total Enrollment`[1])+(district_1$Math_Scores_2019[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$ELA_Scores_2019[1]*district_1$`Total Enrollment`[1])+(district_1$ELA_Scores_2019[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$Math_Scores_2022[1]*district_1$`Total Enrollment`[1])+(district_1$Math_Scores_2022[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), round(((district_1$ELA_Scores_2022[1]*district_1$`Total Enrollment`[1])+(district_1$ELA_Scores_2022[2]*district_1$`Total Enrollment`[2]))/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2], district_1$`# Blended`[1] + district_1$`# Blended`[2], 100*round((district_1$`# Blended`[1] + district_1$`# Blended`[2])/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4), district_1$Remote[1] + district_1$Remote[2], 100*round((district_1$Remote[1] + district_1$Remote[2])/(district_1$`Total Enrollment`[1] + district_1$`Total Enrollment`[2]), digit = 4)) names(district_1)[names(district_1) == &quot;Math_Scores_2019&quot;] = &quot;MathScores2019&quot; names(district_1)[names(district_1) == &quot;ELA_Scores_2019&quot;] = &quot;ELAScores2019&quot; names(district_1)[names(district_1) == &quot;Math_Scores_2022&quot;] = &quot;MathScores2022&quot; names(district_1)[names(district_1) == &quot;ELA_Scores_2022&quot;] = &quot;ELAScores2022&quot; names(district_1)[names(district_1) == &quot;Disaggregation Category&quot;] = &quot;DisaggregationCategory&quot; names(district_1)[names(district_1) == &quot;Total Enrollment&quot;] = &quot;TotalEnrollment&quot; names(district_1)[names(district_1) == &quot;# Blended&quot;] = &quot;Blended&quot; names(district_1)[names(district_1) == &quot;% Blended&quot;] = &quot;PercentBlended&quot; names(district_1)[names(district_1) == &quot;Percent Remote&quot;] = &quot;PercentRemote&quot; df_super &lt;- rbind(df_super,district_1) } 3.2.4 Other Cleaning 3.2.4.1 Replacing Missing Values The dataset had missing values in the test scores datasets. We replaced these test scores with its specific district average. This will be elaborated in section 3.3: Missing value analysis. 3.2.4.2 Making a new Variable to reflect categories for Percent Remote As a final step in the data cleaning and consolidation process, we created a new variable called “percent_cat” to categorize the preference for remote learning as “high”, “middle”, or “low”. This new variable is categorical and will be useful for visualizing the data. We divided the remote learning preference into three groups: the lower 25% was labeled as “low”, the middle 25%-75% was labeled as “middle”, and the upper 75% was labeled as “high”. # First, find the minimum and maximum values of percent remote df_super$PercentRemote &lt;- as.numeric(df_super$PercentRemote) min_percent_remote &lt;- as.numeric(min(df_super$PercentRemote)) max_percent_remote &lt;- as.numeric(max(df_super$PercentRemote)) # Next, calculate the lower, middle, and upper bounds of the new categories lower_bound &lt;- quantile(df_super$PercentRemote, 0.25) upper_bound &lt;- quantile(df_super$PercentRemote, 0.75) # Create the new categorical variable using the cut() function df_super$remote_cat &lt;- cut(df_super$PercentRemote, breaks = c(min_percent_remote-1, lower_bound, upper_bound, max_percent_remote), labels = c(&quot;Low&quot;, &quot;Middle&quot;, &quot;High&quot;)) 3.2.5 Our Final Dataset 3.2.5.1 First 10 Observations ## # A tibble: 10 × 13 ## # Groups: District [1] ## District DisaggregationCateg…¹ Categ…² MathS…³ ELASc…⁴ MathS…⁵ ELASc…⁶ Total…⁷ Blended Perce…⁸ Remote Perce…⁹ remot…˟ ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 1 English Language Lea… ELL 605. 600. 604. 603. 908 235 25.9 673 74.1 High ## 2 1 English Language Lea… Not ELL 604. 606. 601. 606. 9641 2800 29 6841 71 Middle ## 3 1 Gender Female 605. 609. 602. 608. 5042 1455 28.9 3587 71.1 Middle ## 4 1 Gender Male 603. 602. 601. 602. 5507 1580 28.7 3927 71.3 Middle ## 5 1 Grade Level 3 606. 607. 600. 604. 784 281 35.8 503 64.2 Middle ## 6 1 Grade Level 4 604. 605. 598. 601. 772 283 36.7 489 63.3 Middle ## 7 1 Grade Level 5 603. 604. 603. 606. 787 228 29 559 71 Middle ## 8 1 Grade Level 6 605. 604. 605. 608. 753 166 22 587 78 High ## 9 1 Grade Level 7 605. 608. 600. 608. 752 148 19.7 604 80.3 High ## 10 1 Grade Level 8 603. 604. 599. 604. 753 145 19.3 608 80.7 High ## # … with abbreviated variable names ¹​DisaggregationCategory, ²​Category, ³​MathScores2019, ⁴​ELAScores2019, ## # ⁵​MathScores2022, ⁶​ELAScores2022, ⁷​TotalEnrollment, ⁸​PercentBlended, ⁹​PercentRemote, ˟​remote_cat 3.2.5.2 Last 10 Observations ## # A tibble: 10 × 13 ## # Groups: District [1] ## District DisaggregationCateg…¹ Categ…² MathS…³ ELASc…⁴ MathS…⁵ ELASc…⁶ Total…⁷ Blended Perce…⁸ Remote Perce…⁹ remot…˟ ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 32 Grade Level 4 593. 591. 581. 585. 679 319 47 360 53 Low ## 2 32 Grade Level 5 592. 593. 585. 594. 790 347 43.9 443 56.1 Low ## 3 32 Grade Level 6 594. 594. 586. 597. 952 381 40 571 60 Low ## 4 32 Grade Level 7 594. 597. 590. 601. 962 369 38.4 593 61.6 Middle ## 5 32 Grade Level 8 597. 598. 589. 598. 1022 409 40 613 60 Low ## 6 32 Race or Ethnicity Asian 609. 604. 587. 606. 218 51 23.4 167 76.6 High ## 7 32 Race or Ethnicity Black 594. 597. 589. 599. 1601 467 29.2 1134 70.8 Middle ## 8 32 Race or Ethnicity Hispan… 593. 593. 586. 593. 7659 3162 41.3 4497 58.7 Low ## 9 32 Race or Ethnicity White 601. 600. 587. 605. 265 111 41.9 154 58.1 Low ## 10 32 total total 595. 595. 589. 597. 9832 3812 38.77 6020 61.2 Middle ## # … with abbreviated variable names ¹​DisaggregationCategory, ²​Category, ³​MathScores2019, ⁴​ELAScores2019, ## # ⁵​MathScores2022, ⁶​ELAScores2022, ⁷​TotalEnrollment, ⁸​PercentBlended, ⁹​PercentRemote, ˟​remote_cat 3.3 Missing value analysis Within our data received from the NYC department of education, there are some missing values that need to be filled in order to facilitate our analysis in the results section. The chart below shows the number of rows with missing values for each variable: ## MathScores2022 ELAScores2022 MathScores2019 ELAScores2019 District ## 8 6 4 4 0 ## DisaggregationCategory Category TotalEnrollment Blended PercentBlended ## 0 0 0 0 0 ## Remote PercentRemote ## 0 0 As we can see from the images above, the only variables with missing values are MathScores2022, ELAScores2022, MathScores2019, and ELAScores2019. This indicates that our first dataset on remote learning preferences did not have any missing values, but our math and ELA scores datasets did. To further investigate the patterns of missing data, we can look at the chart below: Based on this graph, it is clear that there is a pattern of missing data between the scores variables. We can further examine which demographic categories these missing values exist in by looking at the following graph: As we can see from the graph above, the only categories with missing values for the test scores are two factors within the ethnicity category: “Asian” and “White”. To determine which districts within these categories have missing values, and whether any of these districts are the same, we can look at the chart below: As shown in this chart, the missing values for both “Asian” and “White” ethnicities are from districts 7, 16, 23, and 32. The reason for this could be that on the standardized tests, students in these districts were not required to indicate their ethnicity as “Asian” or “White”. Another possible reason is that there were errors in the reporting of these districts. We imputed these missing values with its respective district’s average test scores. "],["results.html", "Chapter 4 Results 4.1 Part 1: Remote Learning Preferences for Different Districts 4.2 Part 2: Remote Learning Preferences Analysis by Subgroups 4.3 Part 3: Detailed Analysis for ELL Subgroup and Race/Ethnicity Subgroup 4.4 Part 4: Math and ELA Scores for Different Districts 4.5 Part 5: Math and ELA Scores by Subgroups 4.6 Part 6: Detailed Analysis for ELL Subgroup and Race/Ethnicity Subgroup", " Chapter 4 Results 4.1 Part 1: Remote Learning Preferences for Different Districts 4.1.1 Overview In this section, we will explore remote learning preferences using three methods: a heat map plot from JSON, a histogram, and a Cleveland dot plot. Our goal is to show the overall distribution of remote learning preferences in districts. 4.1.2 Heatmap Plot from JSON This heatmap is scrapped from a GeoJSON file. It took a substantial amount of time to figure out and create the legend due to the format of the GeoJSON file. In this graph, we can see the remote learning preference for each district. As shown in the legend on the right, we can observe each cell’s value of the main variable in the corresponding cell range. Darker colorings are associated with higher remote learning preference. From the graph, we can see that the district with lowest remote learning preference is about 54%, and the district with highest remote learning preference is about 76%. 4.1.3 Bar Plot of Remote Learning Preferences The histogram shows the overall distribution of the percentage of remote learning preference. We created a bin for every 2.5% change in preference and the height of each bar represents the number of districts that fall within a particular percentage. From the graph, we can see that the graph is slightly left-skewed. In addition, we can see that most scores fall in the bin between 70-72.5%. 4.1.4 Cleveland Dot Plot of Remote Learning Preferences Per District (Order by Highest to Lowest) The Cleveland Dot plot allows us to observe the remote learning preference of each district and an overall dynamic of the difference between districts. We reorder the districts by their preference from the highest to the lowest. From the plot, we can see a cluster of districts between 66% to 73% remote learning. There are no major outliers in the upper side, but there are a few outliers for districts with low remote learning preference percentage. 4.2 Part 2: Remote Learning Preferences Analysis by Subgroups 4.2.1 Overview After analyzing the overall data, we want to look at four subgroups (grade level, gender, English language learners (ELL), ethnicity) to determine which indicator has the strongest impact on preference for remote learning. 4.2.2 Gender The Cleveland dot plot shows the remote learning preference of different genders in each district. The blue dots represent the preference of males and the red dots represent the preference of females. For most districts, females have a stronger preference for remote learning. We highlighted the difference between males and females for each district by connecting the dots for each gender. However, the differences between male and female preferences are not significant. District 4, which has the highest gap, is ranked in the middle for overall remote learning preferences. Therefore, we conclude that gender is not a major indicator of remote learning analysis. 4.2.3 English Language Learner Status The Cleveland dot plot shows the remote learning preference of different English language learner (ELL) statuses in each district. The blue dots represent the preference of English language learners and the red dots represent the preference of non-English language learners. We observe a significantly stronger preference for remote learning among non-English language learners. We highlighted the difference between ELL and non-ELL students for each district by connecting the dots for each group. We will further analyze this factor in the following section due to the large gap between ELL and non-ELL preferences. 4.2.4 Race/Ethnicity This plot shows the remote learning preference for different races or ethnicities in each district. The Cleveland dot plot allows us to easily compare the preferences of different races or ethnicities within each district. According to the graph, the category Asian (red dots) have the highest preference for remote learning, while category White(purple dots) have the lowest willingness to do school remotely. Category Black (green dots) have a slightly stronger inclination towards remote learning compared to category Hispanic (blue dots). We will further analyze this factor in the following section. This is also a Cleveland dot plot of the percentage of remote learning preference but with facets showing different races or ethnicity. Unlike the previous graph, this plot allows us to see the distribution of preference of each race/ethnicity per district. We reorder each plot from the highest to the lowest. Readers can use this graph to find the subgroup ranking for different districts as the previous Cleveland plot has 4 colors and is relatively hard to see. 4.2.5 Grade Level This plot shows the remote learning preference for different grade levels in each district. The Cleveland dot plot allows us to easily compare the preferences of different grades within each district. We do not observe a strong pattern of change in preferences across grades. Again, this plot allows us to see the distribution of preference of each grade (from 3-8) per district. We reorder each plot from the highest to the lowest. Readers can use this graph to find the subgroup ranking for different districts as the previous Cleveland plot has 6 colors and is relatively hard to see. 4.3 Part 3: Detailed Analysis for ELL Subgroup and Race/Ethnicity Subgroup 4.3.1 Overview From the previous section, we found that people’s preferences change substantially across ELL status and race/ethnicity groups. In this next section, we will take a deeper look at the correlation between the proportion of certain groups, if it exists. 4.3.2 ELL Proportion vs Remote Learning Preferences As shown in the graph, the percentage of English language learners (ELL) in each district is quite scattered. We fit the data to a linear model and do not see a strong correlation between the ELL proportion and preferences for remote learning. 4.3.3 Race/Ethnicity Proportion vs Remote Learning Preferences There is a slightly positive correlation between the Asian proportion and remote learning preference percentage (the higher the Asian proportion, the higher the remote learning preference), and a slightly negative correlation between the White proportion and remote learning preference percentage. We do not notice any major correlation between the remote learning preference and the proportions of Hispanic and Black groups. 4.4 Part 4: Math and ELA Scores for Different Districts 4.4.1 Overview We want to observe the trend of how the average preference of different groups changes from 2019-2022. In data.Rmd we separated preferences into three groups: low (lowest 20%), middle (25%-75%), and high (top 25%). 4.4.2 Parallel coordinates plot To illustrate the changes in test scores from 2019 to 2022, we created a parallel coordinate plot and grouped the scores by each district’s average preference for remote learning. The plot provides insight into students’ performance prior to the pandemic when exams were administered in person, and after the pandemic when exams were administered virtually. By examining each district’s average preference for remote learning in relation to their test scores, we can determine if remote learning preference had an impact on test performance for math and English language arts (ELA). According to the parallel coordinates plot, districts on average improved their ELA test scores from 2019 to 2022 but their performance declined for math tests. However, these relationships were not affected by the districts’ preference for remote learning. Districts that did not prefer remote learning had scores clustered towards the upper middle range, but the trend of improving ELA scores and declining math scores was consistent across districts regardless of their preference for remote learning. 4.5 Part 5: Math and ELA Scores by Subgroups 4.5.1 Overview In order to compare test scores and remote learning preferences between different demographics, we created a series of boxplots. 4.5.2 Gender There does not seem to be a significant difference in the change in test scores between males and females from 2019 to 2022. However, students with a medium preference for remote learning performed worse on average across all groups. 4.5.3 English Language Learner Students who are not English language learners had a higher average preference for remote learning than students who were. However, ELL students who had a high preference for remote learning tended to outperform non-ELL students. ELL students who did not prefer remote learning had lower test scores. There was no significant difference between pre-pandemic and post-pandemic test scores for ELL students. 4.5.4 Race/Ethnicity Students whose race was “Asian” and who had high preference for remote learning performed significantly better across all groups. Their median ELA scores improved from 2019 to 2022 and declined from 2019 to 2022, which is consistent with the results from the parallel coordinates plot in Part 4. Throughout all test scores there exists a large outlier for the students who had medium preference. Students whose race was “White” did not have any high remote learning preferences, but those who had low remote learning preferences outperformed the students with medium preferences. Students whose race was “Black” did not have many low remote learning preferences, but the students who had high preferences outperformed the others. 4.5.5 Grade Level For grades 3-8, on average students who did not prefer remote learning as much tended to outperform on math and ELA tests compared to the ones who did (with the exception of 8th graders’ 2022 math scores). 3rd graders did not have high preference for remote learning in general, and 4th and 5th grader had very few students with high preference for remote learning. 4.6 Part 6: Detailed Analysis for ELL Subgroup and Race/Ethnicity Subgroup 4.6.1 Overview In this section, we aim to find the correlations between test scores and remote learning preference. We made the plots with facets by two major indicators (ELL and Race/Ethnicity). 4.6.2 ELL Remote Learning Preferences vs. Scores We observe a positive correlation between the percentage of remote learning preference and test scores within the ELL group. There is a trend that the stronger the preference for remote learning, the higher the score. There is also a negative correlation between the percentage of remote learning preference and test scores within the non-ELL group. However, we do not observe any difference in correlations across years from 2019 to 2022. The distribution of each group barely changed (but the overall ELA scores increased and overall math scores decreased). Therefore, we do not think there is a relationship between changes in test scores and remote learning preferences within different ELL groups. 4.6.3 Race/Ethnicity Remote Learning Preferences vs. Scores We observe a slightly positive correlation between the percentage of remote learning preference and test scores within the Asian group. The stronger the preference for remote learning, the higher the score. There is also a negative correlation between the percentage of remote learning preference and test scores within the White group. However, similar to the ELL group, we do not observe any noticeable change in the distribution of test scores and remote learning preferences from 2019 to 2022 within each race or ethnicity. "],["interactive-component.html", "Chapter 5 Interactive component 5.1 Interactive Heat Map for Remote Learning Analysis 5.2 Appendix: NYC Education District Map", " Chapter 5 Interactive component 5.1 Interactive Heat Map for Remote Learning Analysis .background { fill: #eee; opacity: 0; pointer-events: all; } .map-layer { fill: #fff; stroke: #aaa; } .effect-layer{ pointer-events:none; } text{ font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 300; } text.big-text{ font-size: 30px; font-weight: 400; } text.medium-text{ font-size: 15px; font-weight: 400; } text.small-text{ font-size: 12px; font-weight: 1000; } .effect-layer text{ font-size: 12px; } Please put your mouse on any of the districts to view information about remote learning preference, Math and ELA test scores, and proportion for different subgroups 5.2 Appendix: NYC Education District Map You can use the following interative graph to find your education district "],["conclusion.html", "Chapter 6 Conclusion", " Chapter 6 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
